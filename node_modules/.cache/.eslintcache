[{"C:\\xampp\\htdocs\\react\\tooltip-app\\src\\index.js":"1","C:\\xampp\\htdocs\\react\\tooltip-app\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\react\\tooltip-app\\src\\App.js":"3","C:\\xampp\\htdocs\\react\\tooltip-app\\src\\TooltipForm.js":"4","C:\\xampp\\htdocs\\react\\tooltip-app\\src\\TooltipPreview.js":"5"},{"size":535,"mtime":1690724198449,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1690724198708,"results":"8","hashOfConfig":"7"},{"size":909,"mtime":1690806827432,"results":"9","hashOfConfig":"7"},{"size":2833,"mtime":1690811620016,"results":"10","hashOfConfig":"7"},{"size":2197,"mtime":1690808498276,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1swcz0i",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\xampp\\htdocs\\react\\tooltip-app\\src\\index.js",[],[],"C:\\xampp\\htdocs\\react\\tooltip-app\\src\\reportWebVitals.js",[],[],"C:\\xampp\\htdocs\\react\\tooltip-app\\src\\App.js",[],[],"C:\\xampp\\htdocs\\react\\tooltip-app\\src\\TooltipForm.js",[],[],"C:\\xampp\\htdocs\\react\\tooltip-app\\src\\TooltipPreview.js",["28"],[],"import React, { useRef, useEffect } from \"react\";\r\n\r\nconst TooltipPreview = ({\r\n  targetElement,\r\n  tooltipText,\r\n  textSize,\r\n  padding,\r\n  textColor,\r\n  backgroundColor,\r\n  cornerRadius,\r\n  tooltipWidth,\r\n  \r\n}) => {\r\n  const tooltipRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    positionTooltip();\r\n  }, [targetElement, textSize, padding, textColor, backgroundColor, cornerRadius, tooltipWidth]);\r\n  \r\n\r\n  const tooltipStyle = {\r\n    fontSize: textSize + \"px\",\r\n    padding: padding + \"px\",\r\n    color: textColor,\r\n    backgroundColor,\r\n    borderRadius: cornerRadius + \"px\",\r\n    width: tooltipWidth + \"px\",\r\n    position: \"absolute\",\r\n    display: \"inline-block\",\r\n    zIndex: 9999,\r\n  };\r\n\r\n  const positionTooltip = () => {\r\n    const targetElementRef = document.getElementById(targetElement);\r\n    const tooltipRefCurrent = tooltipRef.current;\r\n  \r\n    if (!targetElementRef || !tooltipRefCurrent) return;\r\n  \r\n    const positions = {\r\n      B1: { top: \"40px\", left: \"15px\" },\r\n      B2: { top: \"40px\", left: \"550px\" },\r\n      B3: { top: \"240px\", left: \"280px\" },\r\n      B4: { top: \"355px\", left: \"15px\" },\r\n      B5: { top: \"355px\", left: \"550px\" },\r\n    };\r\n  \r\n    const { top, left } = positions[targetElement] || {};\r\n  \r\n    if (top !== undefined && left !== undefined) {\r\n      tooltipRefCurrent.style.top = top;\r\n      tooltipRefCurrent.style.left = left;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"tooltip-preview\">\r\n      <div className=\"target-container\" id=\"target-container\">\r\n        <div className=\"target-element B1\" id=\"B1\">\r\n          Button1\r\n        </div>\r\n        <div className=\"target-element B2\" id=\"B2\">\r\n          Button2\r\n        </div>\r\n        <div className=\"target-element B3\" id=\"B3\">\r\n          Button3\r\n        </div>\r\n        <div className=\"target-element B4\" id=\"B4\">\r\n          Button4\r\n        </div>\r\n        <div className=\"target-element B5\" id=\"B5\">\r\n          Button5\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"tooltip\"\r\n        style={{\r\n          ...tooltipStyle,\r\n        }}\r\n        ref={tooltipRef}\r\n      >\r\n        \r\n        {tooltipText}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipPreview;\r\n",{"ruleId":"29","severity":1,"message":"30","line":18,"column":6,"nodeType":"31","endLine":18,"endColumn":96,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'positionTooltip'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [targetElement, textSize, padding, textColor, backgroundColor, cornerRadius, tooltipWidth, positionTooltip]",{"range":"36","text":"37"},[308,398],"[targetElement, textSize, padding, textColor, backgroundColor, cornerRadius, tooltipWidth, positionTooltip]"]